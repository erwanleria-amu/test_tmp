### POUR LES DEVELOPPEURS

##Préface :
#Ce document explique comment lancer le projet MétéoRando (de l'équipe-projet MétéoRando1) de A à Z sur Linux/Debian via le terminal.
#A la fin du document une partie est dédiée au système d'exploitation non-libre Windows.
#OS : Linux
#Distribution : Debian 9 Stretch

## I. Installer php7

#Télécharger la dernière tarball de php 7, décompressez-la dans un répertoire de votre Home
#Au préalable vérifier que certaines librairies sont bien installées
$ sudo apt-get install autoconf build-essential curl libtool \
  libssl-dev libcurl4-openssl-dev libxml2-dev libreadline7 \
  libreadline-dev libzip-dev libzip4 nginx openssl \
  pkg-config zlib1g-dev

#Vous pouvez configurer le build dans un répertoire pour faire les choses proprement, sinon ignorer ci-dessous "--prefix=<INSERER UN REPERTOIRE POUR LE BUILD>"
  
$./configure  --prefix=<INSERER UN REPERTOIRE POUR LE BUILD> --enable-mysqlnd     --with-pdo-mysql     --with-pdo-mysql=mysqlnd     --with-pdo-pgsql=/usr/bin/pg_config     --enable-bcmath     --enable-fpm     --with-fpm-user=www-data     --with-fpm-group=www-data     --enable-mbstring     --enable-phpdbg     --enable-shmop     --enable-sockets     --enable-sysvmsg     --enable-sysvsem     --enable-sysvshm     --enable-zip     --with-libzip    --with-zlib     --with-curl     --with-pear     --with-openssl     --enable-pcntl     --with-readline


$make -jX (remplacer x par le nombre de processeurs de votre machine -car c'est assez long)
Build complete.


$ make install
Wrote PEAR system config file at: /usr/local/etc/pear.conf
You may want to add: /usr/local/lib/php to your php.ini include_path
/home/erwan/Téléchargements/php-7.2.10/build/shtool install -c ext/phar/phar.phar /usr/local/bin
ln -s -f phar.phar /usr/local/bin/phar
Installing PDO headers:           /usr/local/include/php/ext/pdo/

#NB : Vous pouvez faire make test MAIS si vous avez Debian en français alors le test va s'arrêter(crash)  en lisant la date car un des tests se base sur la date actuelle fournie par la machine, or le test en question utilise une fonction qui ne lit la date qu'au format anglophone.

## II. Installer composer sur votre machine
$ curl -sS https://getcomposer.org/installer | php

#Cela crée un fichier composer.phar dans le répertoire courant, vous pouvez le copier et ou le déplacer de la façon suivante /usr/local/bin/composer ceci vous permettra d'utiliser composer dans n'importe quel autre répertoire

All settings correct for using Composer
Downloading...

Composer (version 1.7.2) successfully installed to: /home/erwan/Téléchargements/php-7.2.10/composer.phar
Use it: php composer.phar

## III. Installer Symfony
$ curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony
$ chmod a+x /usr/local/bin/symfony

## IV. Acceder au projet
$ git clone https://github.com/Kr4unos/MeteoRando.git
$ cd MeteoRando

#Avant de lancer la commande suivante il faut au préalable avoir créé #une session utilisateur mysql (installer les packages mysql-client et# mysql-server)
#Lancer mysql (cela peut ne pas fonctionner sans les privilèges root) il faudra alors se mettre en mode root :
#Si c'est une première connexion avec mysql, remplacer le mot newpass par un mot de passe : $ mysqladmin -u root password newpass
(Source : https://www.howtoforge.com/setting-changing-resetting-mysql-root-passwords#method-set-up-root-password-for-the-first-time)
 
#Sinon :
$ mysql -u root -p
#Et entrez votre mot de passe si vous en avez déjà configuré un.

#Une fois dans l'interface mysql du terminal, on va créer une session avec le nom de l'utilisateur habituel du répertoire home (pour éviter de lancer le projet en root), entrer :
> GRANT ALL PRIVILEGES ON *.* TO 'INSERER NOM DE L UTILISATEUR DU REPERTOIRE HOME COURANT'@'127.0.0.1' IDENTIFIED BY 'INSERER MOT DE PASSE'
> Ctrl + c #ou quit pour sortir

#Bien sortir du mode root si vous avez fait une commande du type "su" ou "sudo -s"
$ exit

$ composer install #ou composer.phar install
#Des lignes de ce genre vont apparaître :
#- Installing swiftmailer/swiftmailer (v5.4.12): Loading from cache
#Patienter un peu, ensuite il faut entrer des informations. Pour les champs non-complétés ci-dessous il faudra appuyer sur Entrée.

database_host (127.0.0.1):
database_port (null): 
database_name (symfony): 
database_user (root): CHANGER AVEC LE NOM D'UTILISATEUR CHOISI PRECEDEMMENT
database_password (null): INSERER LE MDP CHOISI PRECEDEMMENT
mailer_transport (smtp): 
mailer_host (127.0.0.1): 
mailer_user (null): 
mailer_password (null): 
secret (ThisTokenIsNotSoSecretChangeIt): 

$ php bin/console doctrine:database:create 
Created database `symfony` for connection named default

$ php bin/console doctrine:schema:create
Creating database schema...
Database schema created successfully!

$ php bin/console server:run
[OK] Server listening on http://127.0.0.1:8000

#Lancer votre navigateur web favori
#Dans la barre d'adresse écrire http://127.0.0.1:8000
#Vous arrivez sur la page web de MétéoRando

## Aparté : Creer un projet symfony
$ symfony new test

 Downloading Symfony...

    6.2 MiB/6.2 MiB ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓  100%

 Preparing project...

 ✔  Symfony 3.4.17 was successfully installed. Now you can:

    * Change your current directory to /home/erwan/GL/test

    * Configure your application in app/config/parameters.yml file.

    * Run your application:
        1. Execute the php bin/console server:start command.
        2. Browse to the http://localhost:8000 URL.

    * Read the documentation at https://symfony.com/doc

$ ls test
app  bin  composer.json  composer.lock  phpunit.xml.dist  README.md  src  tests  var  vendor  web

##Sous Windows

#Installer php : http://php.net/manual/fr/install.windows.php
#Appuyer sur Windows + r, taper "cmd". Dans l'invite de commande faire:
 php -r "readfile('https://symfony.com/installer');" > symfony

###########################################
# Par exemple, si WAMP est utilisé...
c:\> move symfony c:\wamp\bin\php
# ... alors, exécutez la commande comme ceci :
c:\> symfony

# Déplacement dans le dossier de vos projets ...
c:\> move symfony c:\projects

# ...  alors, exécutez la commande comme ceci
c:\> cd projects
c:\projects\> php symfony

(Source : https://symfony.developpez.com/documentation/symfony3/part-03-apprendre-installer-configurer/#L2-2)
##########################################

#Installer Composer: https://getcomposer.org/ (En l'ajoutant bien à votre path lors de l'install)

#Exécuter "composer install" à la racine de votre projet

#Modifier le fichier "/app/parameters.yml" pour mettre les données de connexion de votre BD locale (Obligatoirement MySQL)

#Executer php bin/console doctrine:database:create à la racine du projet

#Ensuite executer php bin/console doctrine:schema:create à la racine du projet

#Enfin, vous pouvez lancer un serveur php local avec php bin/console server:run
